name: Java CI/CD Pipeline

on:
  push:
    branches: [main, staging, feature/**]
  pull_request:
    branches: [main, staging]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      cassandra:
        image: cassandra:4.1
        ports:
          - 9042:9042
        options: >-
          --health-cmd="cqlsh -e 'describe keyspaces'" 
          --health-interval=20s 
          --health-timeout=10s 
          --health-retries=5

      redis:
        image: redis:latest
        ports:
          - 6379:6379

    env:
      SPRING_DATA_CASSANDRA_CONTACT_POINTS: localhost
      SPRING_DATA_CASSANDRA_PORT: 9042
      SPRING_DATA_REDIS_HOST: localhost
      SPRING_DATA_REDIS_PORT: 6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Grant permission to Gradle wrapper
        run: chmod +x gradlew

      - name: Build & test
        run: ./gradlew clean test --no-daemon

  docker-image:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Grant permission to Gradle wrapper
        run: chmod +x gradlew

      - name: Build Spring Boot JAR
        run: ./gradlew clean build --no-daemon

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          IMAGE_NAME=dokcharan/finapp
          COMMIT_SHA=${GITHUB_SHA::7}
          docker build -t $IMAGE_NAME:$COMMIT_SHA -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:$COMMIT_SHA
          docker push $IMAGE_NAME:latest

  deploy-to-eks:
    runs-on: ubuntu-latest
    needs: docker-image
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.32.2'

      - name: Install aws-iam-authenticator
        run: |
          curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.27.5/2023-10-26/bin/linux/amd64/aws-iam-authenticator
          chmod +x ./aws-iam-authenticator
          sudo mv aws-iam-authenticator /usr/local/bin/

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region us-west-1 --name finapp-cluster

      - name: Deploy to EKS cluster
        run: |
          kubectl apply -k k8s/overlays/prod/
          kubectl rollout status deployment/finapp --namespace default --timeout=120s